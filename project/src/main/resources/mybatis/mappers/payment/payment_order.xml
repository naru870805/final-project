<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
      PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
   "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="payment.order">
	<resultMap id="payment_order01" type="java.util.HashMap">
		<result property="order_id" column="order_id"  />
		<result property="user_id" column="user_id" />
		<result property="lecture_id" column="lecture_id" />
		<result property="order_date" column="order_date" />
		<result property="order_price" column="order_price" />
		<result property="discount_point" column="discount_point" />
		<result property="total_price" column="total_price" />
		<result property="point_over" column="point_over" />
	</resultMap>
	
	<!-- 조인하여 강의명 받아오기 위해 -->
	<resultMap id="payment_lectResult01" type="java.util.HashMap">
		<result property="lecture_id" column="lecture_id"  />
		<result property="lecture_category" column="lecture_category" />
		<result property="lecture_name" column="lecture_name" />
		<result property="user_id" column="user_id" />
		<result property="lecture_tuition" column="lecture_tuition" />
	</resultMap>
	<!-- point 업데이트할 정보 받기위해 -->
	<resultMap id="payment_pointResult01" type="java.util.HashMap">
		<result property="point_date" column="point_date"  />
		<result property="point_change" column="point_change" />
		<result property="point_rest" column="point_rest" />
		<result property="user_id" column="user_id" />
		<result property="point_content" column="point_content" />
	</resultMap>
	
	
	<!-- 주문번호 생성 , order sequence -->
	<select id="seq_order" resultType="_int">
   			 select seq_order_id.NEXTVAL FROM dual
	</select>
	
	<!-- orders -->
	<select id="searchOrder" resultMap="payment_order01" parameterType="java.util.Map"> 
      <![CDATA[
         select order_id, user_id, lecture_id, order_date, order_price, discount_point, total_price, point_over
         from   orders
      ]]>
		<where>
			<if test=" order_id != ''  and  order_id != null">
				order_id = #{order_id}
			</if>
		</where>
	</select>
	
	
	<!-- point정보 제외 orders, 초기 강의 클릭시 -->
	<insert id="insertOrder1" parameterType="java.util.Map">
		insert into orders(order_id, user_id, lecture_id, order_date, order_price)
		values(#{order_id}, #{p_id}, #{l_id}, sysdate, #{order_price})
	</insert>
	<insert id="insertOrder2" parameterType="java.util.Map">
		insert into orders(order_id, user_id, lecture_id, order_date, order_price, discount_point, total_price, point_over)
		values(#{order_id}, #{p_id}, #{l_id}, sysdate, #{order_price}, #{discount_point}, #{total_price}, #{point_over})
	</insert>	
	<!-- point사용 정보 입력 받고 적용 update -->
	<update id="updateOrder" parameterType="java.util.Map">
		update orders
		set  discount_point = #{discount_point}
		   , total_price = #{total_price}
		   , point_over = #{point_over}
		where order_id = #{order_id}
	</update>
	
	
	<!-- 강의 컬럼 조회 -->
	<select id="order_lecture" resultMap="payment_lectResult01" parameterType="java.util.Map"> 
      <![CDATA[
         select lecture_id, lecture_category, lecture_name, user_id, lecture_tuition
         from   lecture
      ]]>
	<where>
		<if test=" l_id != ''  and  l_id != null">
			lecture_id = #{l_id}
		</if>
	</where>
	<!-- 강의명 order&lecture lecture_name , kakao에서 String로 전부 받기 때문에 [to_char]-->
	</select>
	<select id="searchOrder2" resultMap="payment_order01" parameterType="java.util.Map"> 
		select o.order_id, o.user_id, o.lecture_id, o.order_date, to_char(o.order_price) order_price, 
        	   to_char(o.discount_point) discount_point, to_char(o.total_price) total_price, 
        	   o.point_over, l.lecture_name
		from orders o JOIN lecture l
		ON o.lecture_id = l.lecture_id
		and o.order_id = #{order_id}
	</select>
	
	<!-- orders&point join -->
	<select id="serarchOrderPoint" resultMap="payment_pointResult01" parameterType="java.util.Map">
		select o.discount_point, 
			   p.point_rest, 
			   p.point_content, 
			   p.point_date 
		from orders o join point p 
		on o.user_id = p.user_id
		and o.order_id = #{order_id}
		and p.point_date = ( select MAX(point_date) from point )
	</select>
	
	<insert id="paymentResult" parameterType="java.util.Map">
		insert into pay(pay_id, pay_content, pay_way, user_id, pay_date, pay_amount)
		values(#{pay_id}, #{pay_content}, #{pay_way}, #{user_id}, sysdate, #{pay_amount})
	</insert>
	
	
</mapper>